const { MessageEmbed } = require("discord.js");
let ticket = [];
module.exports = {
  name: "ticket",
  category: "ticket",
  cooldown: 5,
  permission: "",
  bot: ["MANAGE_CHANNELS", "VIEW_CHANNEL", "MANAGE_ROLES"],
  run: async (client, message, args) => {
    let btn1 = new client.button.MessageButton()
      .setStyle("blurple")
      .setLabel("üé´  –û—Ç–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç!")
      .setID("1");
    message.delete();
    let embed = new MessageEmbed()
      .addField(
        "–û—Ç–∫—Ä—ã—Ç–∏–µ —Ç–∏–∫–µ—Ç–∞!",
        `–û—Ç—Ä–µ–∞–≥–∏—Ä–æ–≤–∞–≤ –Ω–∞ —ç—Ç–æ—Ç —Ç–∏–∫–µ—Ç, –¥–ª—è –≤–∞—Å –æ—Ç–∫—Ä–æ–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ.`
      )
      .setColor("#468DFF")

    client.button.send(null, {
      channel: message.channel.id,
      embed: embed,
      buttons: [[btn1]]
    });
    client.button.on("1", async button => {
      let btn2 = new client.button.MessageButton()
        .setStyle(`grey`)
        .setLabel(`üîí  –ó–∞–∫—Ä—ã—Ç—å`)
        .setID("2");
      let ch = client.db.get(
        `tickets_${message.guild.id}_${button.clicker.user.id}`
      );
      if (ch) {
        button.reply(
          "–í–∞—à —Ç–∏–∫–µ—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–∞–∂–º–∏—Ç–µ <#" + ch + "> —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –µ–≥–æ",
          { flags: 64 }
        );
      }
      if (!ch) {
        const channel = await button.guild.channels.create(
          `${button.clicker.user.username} ticket`,
          {
            topic: `–ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:
–ò–º—è —Ç–∏–∫–µ—Ç–∞: ${button.clicker.user.username}
ID —Ç–∏–∫–µ—Ç–∞: ${button.clicker.user.id}`,
            permissionOverwrites: [
              {
                id: button.guild.roles.everyone,
                deny: ["VIEW_CHANNEL"]
              },
              {
                id: button.clicker.user.id,
                allow: ["VIEW_CHANNEL"]
              },
              {
                id: client.user.id,
                allow: [
                  "VIEW_CHANNEL",
                  "MANAGE_CHANNELS",
                  "MANAGE_MESSAGES",
                  "SEND_MESSAGES"
                ]
              }
            ]
          }
        );
        button.reply(
          "–¢–≤–æ–π —Ç–∏–∫–µ—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω. –ù–∞–∂–º–∏ –Ω–∞  <#" +
            channel.id +
            "> —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–≤–æ–π —Ç–∏–∫–µ—Ç",
          { flags: 64 }
        );
        const embedticket = new MessageEmbed()
          .setTimestamp()
          .setTitle("–û–±—â–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞")
          .setFooter(`–¢–∏–∫–µ—Ç –æ—Ç–∫—Ä—ã—Ç –Ω–∞`)
          .setColor(0x5865f2)
          .setDescription(
            `–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç —Ç—É—Ç.\n–ß—Ç–æ–±—ã –∑–∞–∫—Ä—ã—Ç—å —ç—Ç–æ—Ç –±–∏–ª–µ—Ç, –Ω–∞–∂–º–∏—Ç–µ üîí`
          );
        client.button.send(`–ü—Ä–∏–≤–µ—Ç ${button.clicker.user}`, {
          channel: channel.id,
          embed: embedticket,
          buttons: [[btn2]]
        });
        client.db.set(
          `tickets_${message.guild.id}_${button.clicker.user.id}`,
          channel.id
        );
        client.db.set(
          `tickets_user_${message.guild.id}_${channel.id}`,
          button.clicker.user.id
        );
        client.button.on("2", async buttons => {
          let chs = client.db.get(
            `tickets_user_${message.guild.id}_${buttons.channel.id}`
          );
          if (chs !== buttons.clicker.user.id) {
            buttons.reply(
              `–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞, —Ç–æ–ª—å–∫–æ <@${chs}> –¥–ª—è –Ω–µ–≥–æ`,
              { flags: 64 }
            );
          }
          if (chs === buttons.clicker.user.id) {
            buttons.reply("–£–¥–∞–ª–µ–Ω–∏–µ, –ø–æ–¥–æ–∂–¥–∏—Ç–µ 5 —Å–µ–∫—É–Ω–¥", { flags: 64 });
            setTimeout(function() {
              client.db.delete(
                `tickets_${message.guild.id}_${button.clicker.user.id}`
              );
              client.db.delete(
                `tickets_user_${message.guild.id}_${buttons.channel.id}`
              );
              buttons.channel.delete();
            }, 5000);
          }
        });
      }
    });
  }
};
